error: this arithmetic operation will overflow
  --> tests/ui/overflow.rs:33:5
   |
33 |     C,
   |     ^ attempt to compute `254_u8 + 2_u8`, which would overflow
   |
   = note: `#[deny(arithmetic_overflow)]` on by default

error: literal out of range for `u8`
  --> tests/ui/overflow.rs:24:9
   |
24 |     A = 0xffef,
   |         ^^^^^^
   |
   = note: `#[deny(overflowing_literals)]` on by default
   = note: the literal `0xffef` (decimal `65519`) does not fit into the type `u8` and will become `239u8`
   = help: consider using the type `u16` instead

error: literal out of range for `u8`
  --> tests/ui/overflow.rs:25:5
   |
25 |     B,
   |     ^
   |
   = note: the literal `B` does not fit into the type `u8` whose range is `0..=255`

error: any use of this value will cause an error
  --> tests/ui/overflow.rs:33:5
   |
28 | #[open_enum]
   | ------------
...
33 |     C,
   |     ^ attempt to compute `254_u8 + 2_u8`, which would overflow
   |
   = note: `#[deny(const_err)]` on by default
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>

error: any use of this value will cause an error
  --> tests/ui/overflow.rs:30:6
   |
28 |   #[open_enum]
   |   ------------
29 |   #[repr(u8)]
30 |   enum NonLiteralImplicitOverflow {
   |  ______^
31 | |     A = u8::MAX - 1,
32 | |     B,
33 | |     C,
   | |_____^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>

error: literal out of range for `u8`
  --> tests/ui/overflow.rs:40:5
   |
40 |     B,
   |     ^
   |
   = note: the literal `B` does not fit into the type `u8` whose range is `0..=255`
